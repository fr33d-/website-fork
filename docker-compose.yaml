version: "3"
services:
  #   frontend:
  #     container_name: frontend
  #     build:
  #       context: .
  #       dockerfile: docker/frontend/Dockerfile
  #     ports:
  #       - "80:80"
  #       - "443:443"
  #     depends_on:
  #       - backend
  #     links:
  #       - backend
  backend:
    container_name: backend
    restart: always
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    env_file:
      - packages/backend/.env.production
    ports:
      - "4000:4000"
    depends_on:
      - postgres
    links:
      - postgres
    # volumes:
    #   - ./packages/backend/uploads:/app/uploads
    volumes:
      - type: bind
        source: ./packages/backend/uploads
        target: /app/uploads
  postgres:
    container_name: postgres
    image: postgres:11.5-alpine
    command: postgres -c shared_buffers=256MB -c fsync=off -c synchronous_commit=off -c full_page_writes=off -c random_page_cost=1.0
    env_file:
      - docker/postgres/.env.production
    ports:
      - "5432:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
    # tmpfs:
    #   - /var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    links:
      - postgres
